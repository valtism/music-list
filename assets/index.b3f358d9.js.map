{"version":3,"file":"index.b3f358d9.js","sources":["../../src/api.ts","../../src/hooks/useSearchboxState.ts","../../src/components/Searchbox.tsx","../../src/hooks/useClickOutside.ts","../../src/components/AlbumTile.tsx","../../src/hooks/useAlbumState.ts","../../src/components/Grid.tsx","../../src/components/DownloadButton.tsx","../../src/hooks/useAuth.ts","../../src/hooks/useLocalStorage.ts","../../src/App.tsx","../../index.tsx"],"sourcesContent":["import { AlbumObject } from \"spotify-api-types\";\n\nexport interface Auth {\n  token: string;\n  expiresAt: number;\n}\n\nexport async function authorize(): Promise<Auth> {\n  const res = await fetch(\n    \"https://1pd7ps5dmd.execute-api.ap-southeast-2.amazonaws.com/default/spotifyAuth\"\n  );\n  const { access_token, token_type, expires_in } = await res.json();\n\n  const expirationTime = Date.now() + (expires_in - 100) * 1000;\n  return {\n    token: `${token_type} ${access_token}`,\n    expiresAt: expirationTime,\n  };\n}\n\nexport async function search(\n  auth: Auth,\n  query: string\n): Promise<AlbumObject[]> {\n  if (!query) return [];\n\n  if (!auth.token) {\n    auth = await authorize();\n  }\n\n  const res = await fetch(\n    `https://api.spotify.com/v1/search?type=album&limit=5&q=${query}`,\n    {\n      headers: { Authorization: auth.token },\n    }\n  );\n  const { albums } = await res.json();\n  return albums.items;\n}\n","import { atom } from \"jotai\";\nimport { AlbumObject } from \"spotify-api-types\";\n\ninterface Searches {\n  [key: string]: AlbumObject[];\n}\n\nexport const inputAtom = atom(\"\");\nexport const indexAtom = atom(0);\nexport const resultsAtom = atom<AlbumObject[]>([]);\nexport const searchesAtom = atom<Searches>({});\n\nexport const updateInputAtom = atom(null, (get, set, input: string) => {\n  set(inputAtom, input);\n  set(indexAtom, 0);\n  const searches = get(searchesAtom);\n  if (searches[input]) {\n    set(resultsAtom, searches[input]);\n  }\n});\n\ninterface SetAlbumsProps {\n  albums: AlbumObject[];\n  query: string;\n}\n\nexport const setFetchedResultsAtom = atom(\n  null,\n  (get, set, { albums, query }: SetAlbumsProps) => {\n    const searches = get(searchesAtom);\n    const input = get(inputAtom);\n    set(resultsAtom, searches[input] || albums);\n    set(searchesAtom, { ...searches, [query]: albums });\n  }\n);\n\nexport const resetSearchAtom = atom(null, (get, set) => {\n  set(inputAtom, \"\");\n  set(resultsAtom, []);\n});\n","import React, { useMemo, useRef } from \"react\";\nimport clsx from \"clsx\";\nimport debounce from \"lodash.debounce\";\nimport { AlbumObject } from \"spotify-api-types\";\nimport { useAtom } from \"jotai\";\nimport { useAtomValue, useUpdateAtom } from \"jotai/utils\";\n\nimport { Auth, search } from \"../api\";\nimport useOnClickOutside from \"../hooks/useClickOutside\";\nimport {\n  resultsAtom,\n  indexAtom,\n  inputAtom,\n  searchesAtom,\n  setFetchedResultsAtom,\n  updateInputAtom,\n  resetSearchAtom,\n} from \"../hooks/useSearchboxState\";\n\nimport { ReactComponent as EnterIcon } from \"../images/enter.svg\";\nimport { ReactComponent as SearchIcon } from \"../images/search.svg\";\n\ninterface SearchProps {\n  auth: Auth;\n  onAlbumSelect: (album: AlbumObject) => void;\n}\n\nexport default function SearchBox({ auth, onAlbumSelect }: SearchProps) {\n  const input = useAtomValue(inputAtom);\n  const [index, setIndex] = useAtom(indexAtom);\n  const [results, setResults] = useAtom(resultsAtom);\n  const searches = useAtomValue(searchesAtom);\n\n  const setInput = useUpdateAtom(updateInputAtom);\n  const setFetchedResults = useUpdateAtom(setFetchedResultsAtom);\n  const resetSearch = useUpdateAtom(resetSearchAtom);\n\n  const debouncedSearch = useMemo(\n    () =>\n      debounce(async (query: string) => {\n        const albums = await search(auth, query);\n        setFetchedResults({ albums, query });\n      }, 300),\n    [auth, setFetchedResults]\n  );\n\n  const inputRef = useRef<HTMLInputElement>(null);\n  const searchResultsRef = useOnClickOutside<HTMLUListElement>(\n    () => setResults([]),\n    inputRef\n  );\n\n  const previousIndex = index <= 0 ? results.length - 1 : index - 1;\n  const nextIndex = index >= results.length - 1 ? 0 : index + 1;\n\n  return (\n    <div\n      className=\"w-full max-w-sm\"\n      onKeyDown={(e) => {\n        switch (e.key) {\n          case \"ArrowUp\":\n            e.preventDefault();\n            setIndex(previousIndex);\n            break;\n          case \"ArrowDown\":\n            e.preventDefault();\n            setIndex(nextIndex);\n            break;\n          case \"Tab\":\n            e.preventDefault();\n            setIndex(e.shiftKey ? previousIndex : nextIndex);\n            break;\n          case \"Enter\":\n            e.preventDefault();\n            if (!results[index]) return;\n            onAlbumSelect(results[index]);\n            resetSearch();\n            break;\n          case \"Escape\":\n            e.preventDefault();\n            resetSearch();\n            break;\n          default:\n            break;\n        }\n      }}\n    >\n      <div className=\"relative group\">\n        <input\n          ref={inputRef}\n          autoCorrect=\"off\"\n          placeholder=\"Search\"\n          value={input}\n          onChange={(e) => {\n            const query = e.target.value;\n            if (!searches[query]) {\n              debouncedSearch(query);\n            }\n            setInput(query);\n          }}\n          onFocus={async (e) => {\n            e.target.select();\n            if (!input) return;\n            if (searches[input]) {\n              setFetchedResults({ albums: searches[input], query: input });\n            } else {\n              const albums = await search(auth, input);\n              setFetchedResults({ albums, query: input });\n            }\n          }}\n          className={clsx(\n            \"w-full border-2 border-gray-100 bg-gray-100 rounded-lg px-4 py-2 text-gray-900/90\",\n            \"hover:border-purple-100\",\n            \"focus:bg-white focus:border-purple-100 focus:outline-none caret-purple-600/90\",\n            results.length &&\n              \"rounded-b-none bg-white border-purple-100 outline-none\"\n          )}\n        />\n        <div className=\"absolute inset-y-0 right-0 flex items-center pr-4 pointer-events-none\">\n          <SearchIcon\n            className={clsx(\n              \"w-4 h-4 fill-current text-gray-400\",\n              \"group-hover:text-purple-500/80 group-focus-within:text-purple-500/80\"\n            )}\n          />\n        </div>\n      </div>\n\n      {!!results.length && (\n        <ul\n          ref={searchResultsRef}\n          className=\"absolute z-10 w-[calc(100%-32px)] max-w-sm bg-white shadow-xl overflow-auto rounded-b-lg border-2 border-t-0 border-purple-100 divide-y-2 divide-purple-100\"\n        >\n          {results.map((album, i) => (\n            <SearchItem\n              key={album.id}\n              album={album}\n              isHighlighted={i === index}\n              onClick={() => {\n                onAlbumSelect(album);\n                resetSearch();\n              }}\n            />\n          ))}\n        </ul>\n      )}\n    </div>\n  );\n}\n\ninterface SearhItemProps\n  extends React.DetailedHTMLProps<\n    React.ButtonHTMLAttributes<HTMLButtonElement>,\n    HTMLButtonElement\n  > {\n  album: AlbumObject;\n  isHighlighted: boolean;\n}\n\nfunction SearchItem({ album, isHighlighted, ...props }: SearhItemProps) {\n  return (\n    <li key={album.id}>\n      <button\n        className={clsx(\n          \"group relative w-full flex items-center justify-between px-2 py-1.5\",\n          \"hover:bg-purple-100 overflow-hidden focus:outline-none\",\n          isHighlighted && \"bg-purple-100\"\n        )}\n        {...props}\n      >\n        <div className=\"relative w-full flex items-center space-x-2 overflow-hidden\">\n          <img src={album.images[2].url} className=\"w-10 h-10 rounded\" />\n          <div className=\"flex flex-col items-start leading-5\">\n            <div title={album.name} className=\"whitespace-nowrap\">\n              {album.name}\n            </div>\n            <div\n              title={album.artists[0].name}\n              className=\"whitespace-nowrap text-gray-900/60\"\n            >\n              {album.artists[0].name}\n            </div>\n          </div>\n          {!isHighlighted && (\n            <div className=\"absolute h-full w-4 right-0 bg-gradient-to-l from-white group-hover:from-purple-100\" />\n          )}\n        </div>\n        {isHighlighted && (\n          <div className=\"hidden md:flex absolute right-0 h-full items-center pointer-events-none\">\n            <div className=\"w-10 h-full bg-gradient-to-l from-purple-100\" />\n            <div className=\"h-full bg-purple-100 flex items-center px-4\">\n              <EnterIcon className=\"w-4 h-4 fill-current text-purple-600/60 flex-shrink-0\" />\n            </div>\n          </div>\n        )}\n      </button>\n    </li>\n  );\n}\n","import { useEffect, useRef } from \"react\";\n\nexport default function useClickOutside<T extends HTMLElement>(\n  handler: (event: MouseEvent | TouchEvent) => void,\n  ...extraRefs: React.RefObject<HTMLElement>[]\n): React.RefObject<T> {\n  const ref = useRef<T>(null);\n\n  useEffect(() => {\n    const listener = (event: MouseEvent | TouchEvent) => {\n      // Do nothing if clicking ref or extraRef element or descendent elements of these\n      if (\n        !ref.current ||\n        [ref, ...extraRefs].some((ref) =>\n          ref.current?.contains(event.target as Node)\n        )\n      ) {\n        return;\n      }\n\n      handler(event);\n    };\n\n    document.addEventListener(\"mousedown\", listener);\n    document.addEventListener(\"mouseup\", listener);\n    document.addEventListener(\"touchstart\", listener);\n    document.addEventListener(\"touchend\", listener);\n\n    return () => {\n      document.removeEventListener(\"mousedown\", listener);\n      document.removeEventListener(\"mouseup\", listener);\n      document.removeEventListener(\"touchstart\", listener);\n      document.removeEventListener(\"touchend\", listener);\n    };\n  }, [ref, handler, extraRefs]);\n\n  return ref;\n}\n","import clsx from \"clsx\";\nimport React from \"react\";\nimport { AlbumObject } from \"spotify-api-types\";\nimport { ReactComponent as CloseIcon } from \"../images/close.svg\";\n\ninterface AlbumTileProps {\n  album: AlbumObject;\n  onCloseClick?: () => void;\n  className?: string;\n}\n\nexport default function AlbumTile({\n  album,\n  onCloseClick,\n  className,\n}: AlbumTileProps) {\n  return (\n    <div\n      className={clsx(\n        \"group overflow-hidden\",\n        className\n      )}\n    >\n      <div className=\"relative flex flex-col\">\n        {onCloseClick && (\n          <CloseButton\n            onClick={(e) => {\n              e.stopPropagation();\n              onCloseClick();\n            }}\n          />\n        )}\n        <img\n          src={album.images[0].url}\n          onDragStart={(e) => e.preventDefault()}\n          className=\"self-center\"\n        />\n      </div>\n\n      {/* <Details album={album} /> */}\n    </div>\n  );\n}\n\nfunction CloseButton({\n  ...props\n}: React.DetailedHTMLProps<\n  React.ButtonHTMLAttributes<HTMLButtonElement>,\n  HTMLButtonElement\n>) {\n  return (\n    <button\n      className=\"invisible group-hover:visible absolute top-0 right-0 p-2 bg-black/30 rounded-bl-lg text-gray-200 hover:text-white focus:outline-none\"\n      {...props}\n    >\n      <CloseIcon className=\"w-4 h-4 fill-current\" />\n    </button>\n  );\n}\n\ninterface DetailsProps {\n  album: AlbumObject;\n}\n\nfunction Details({ album }: DetailsProps) {\n  return (\n    <div className=\"flex flex-col whitespace-nowrap\">\n      <div title={album.name} className=\"relative overflow-hidden\">\n        <span className=\"text-sm\">{album.name}</span>\n        <div className=\"absolute right-0 top-0 h-full w-4 bg-gradient-to-l from-white via-white\" />\n      </div>\n      <div\n        title={album.artists[0].name}\n        className=\"text-sm text-gray-600 leading-4 truncate\"\n      >\n        {album.artists[0].name}\n      </div>\n    </div>\n  );\n}\n","import { AlbumObject } from \"spotify-api-types\";\nimport { atom } from \"jotai\";\nimport { useMemo } from \"react\";\nimport { selectAtom, useAtomValue } from \"jotai/utils\";\n\nexport const gridIdsAtom = atom(\n  Array(9)\n    .fill(null)\n    .map((_, i) => i.toString())\n);\n\nexport const albumsAtom = atom<{ [key: string]: AlbumObject | null }>(\n  Object.fromEntries(\n    Array(9)\n      .fill(null)\n      .map((e, i) => [i.toString(), null])\n  )\n);\n\nexport const albumAtom = (id: string | null) => {\n  return atom((get) => get(albumsAtom)[id || \"\"]);\n};\n\nexport const addAlbumAtom = atom(null, (get, set, album: AlbumObject) => {\n  const gridIds = get(gridIdsAtom);\n  const albums = get(albumsAtom);\n  const firstEmptyId = gridIds.find((id) => albums[id] === null);\n  if (firstEmptyId === undefined) {\n    return;\n  }\n  set(albumsAtom, { ...albums, [firstEmptyId]: album });\n});\n\ninterface SortAlbumsProps {\n  from: string;\n  to: string;\n}\n\nexport const sortAlbumsAtom = atom(\n  null,\n  (get, set, { from, to }: SortAlbumsProps) => {\n    const gridIds = get(gridIdsAtom);\n    const fromIndex = gridIds.findIndex((id) => id === from);\n    const toIndex = gridIds.findIndex((id) => id === to);\n    const newIds = gridIds.slice();\n    newIds[fromIndex] = to;\n    newIds[toIndex] = from;\n    set(gridIdsAtom, newIds);\n  }\n);\n\nexport const removeAlbumAtom = atom(null, (get, set, id: string) => {\n  set(albumsAtom, { ...get(albumsAtom), [id]: null });\n});\n\nexport function useAlbum(id: string | null) {\n  return useAtomValue(\n    useMemo(() => selectAtom(albumsAtom, (albums) => albums[id || \"\"]), [id])\n  );\n}\n","import React, { useState } from \"react\";\nimport { createPortal } from \"react-dom\";\nimport clsx from \"clsx\";\nimport {\n  closestCenter,\n  DndContext,\n  DragEndEvent,\n  DragOverlay,\n  KeyboardSensor,\n  MouseSensor,\n  TouchSensor,\n  useSensor,\n  useSensors,\n} from \"@dnd-kit/core\";\nimport {\n  rectSwappingStrategy,\n  SortableContext,\n  sortableKeyboardCoordinates,\n  useSortable,\n} from \"@dnd-kit/sortable\";\nimport { CSS } from \"@dnd-kit/utilities\";\n\nimport AlbumTile from \"./AlbumTile\";\nimport { useAlbum } from \"../hooks/useAlbumState\";\ninterface GridProps {\n  items: string[];\n  onDragEnd: (event: DragEndEvent) => void;\n  children: React.ReactNode;\n}\n\nexport default function Grid({ items, onDragEnd, children }: GridProps) {\n  const [activeId, setActiveId] = useState<string | null>(null);\n  const sensors = useSensors(\n    useSensor(MouseSensor, {\n      activationConstraint: {\n        distance: 15,\n      },\n    }),\n    useSensor(TouchSensor, {\n      activationConstraint: {\n        distance: 15,\n      },\n    }),\n    useSensor(KeyboardSensor, {\n      coordinateGetter: sortableKeyboardCoordinates,\n    })\n  );\n\n  const album = useAlbum(activeId);\n\n  return (\n    <DndContext\n      sensors={sensors}\n      collisionDetection={closestCenter}\n      onDragStart={(event) => setActiveId(event.active.id)}\n      onDragEnd={(event) => {\n        onDragEnd(event);\n        setActiveId(null);\n      }}\n      onDragCancel={() => setActiveId(null)}\n    >\n      <SortableContext items={items} strategy={rectSwappingStrategy}>\n        {children}\n      </SortableContext>\n      {createPortal(\n        <DragOverlay adjustScale={true} zIndex={2}>\n          {album && (\n            <AlbumTile\n              album={album}\n              className=\"shadow-xl ring-4 ring-purple-400\"\n            />\n          )}\n        </DragOverlay>,\n        document.body\n      )}\n    </DndContext>\n  );\n}\n\ninterface SortableItemProps\n  extends React.DetailedHTMLProps<\n    React.LiHTMLAttributes<HTMLLIElement>,\n    HTMLLIElement\n  > {\n  id: string;\n  dragClassNames: string;\n  children: React.ReactNode;\n}\n\nexport function SortableItem({\n  id,\n  dragClassNames,\n  children,\n  ...props\n}: SortableItemProps) {\n  const {\n    attributes,\n    listeners,\n    setNodeRef,\n    transform,\n    transition,\n    isDragging,\n  } = useSortable({ id, animateLayoutChanges: () => false });\n\n  const style = {\n    transform: CSS.Transform.toString(transform),\n    transition: transition || undefined,\n  };\n\n  return (\n    <li\n      {...props}\n      ref={setNodeRef}\n      style={{ touchAction: \"none\", ...style }}\n      {...attributes}\n      {...listeners}\n      className={clsx(props.className, isDragging && dragClassNames)}\n    >\n      {children}\n    </li>\n  );\n}\n","import React from \"react\";\nimport { toJpeg } from \"html-to-image\";\n\ninterface DownloadButtonProps {\n  exportRef: React.RefObject<HTMLElement>;\n}\n\nexport default function DownloadButton({ exportRef }: DownloadButtonProps) {\n  return (\n    <button\n      onClick={async () => {\n        if (!exportRef.current) return;\n        const jpg = await toJpeg(exportRef.current, {\n          canvasHeight: 640 * 3,\n          canvasWidth: 640 * 3,\n        });\n        download(jpg, \"chart.jpg\");\n      }}\n      style={{\n        background: `repeating-linear-gradient(\n          -55deg,\n          #FCE7F3,\n          #FCE7F3 10px,\n          #FBCFE8 10px,\n          #FBCFE8 20px\n        )`,\n      }}\n      className=\"px-2 py-1 rounded font-work text-purple-900/80 text-lg hover:shadow-md active:shadow-inner focus:outline-none focus:ring ring-purple-400\"\n    >\n      Download\n    </button>\n  );\n}\n\nfunction download(dataurl: string, filename: string) {\n  const a = document.createElement(\"a\");\n  a.href = dataurl;\n  a.setAttribute(\"download\", filename);\n  a.click();\n}\n","import { useEffect } from \"react\";\nimport { Auth, authorize } from \"../api\";\nimport useLocalStorage from \"./useLocalStorage\";\n\nexport function useAuth() {\n  const [auth, setAuth] = useLocalStorage<Auth>(\"auth\", {\n    token: \"\",\n    expiresAt: Date.now(),\n  });\n\n  useEffect(() => {\n    if (auth.token && auth.expiresAt > Date.now()) return;\n    async function refreshToken() {\n      const auth = await authorize();\n      setAuth(auth);\n      // Automatically refresh token when it expires\n      setTimeout(refreshToken, auth.expiresAt - Date.now());\n    }\n    refreshToken();\n  }, [auth.expiresAt, auth.token, setAuth]);\n\n  return auth;\n}\n","import { useState } from \"react\";\n\nexport default function useLocalStorage<T>(\n  key: string,\n  initialValue: T\n): [T, (value: T) => void] {\n  // State to store our value\n  // Pass initial state function to useState so logic is only executed once\n  const [storedValue, setStoredValue] = useState(() => {\n    try {\n      // Get from local storage by key\n      const item = window.localStorage.getItem(key);\n      // Parse stored json or if none return initialValue\n      if (item) {\n        try {\n          return JSON.parse(item);\n        } catch {\n          return initialValue;\n        }\n      } else {\n        return initialValue;\n      }\n    } catch (error) {\n      // If error also return initialValue\n      console.error(error);\n      return initialValue;\n    }\n  });\n\n  // Return a wrapped version of useState's setter function that\n  // persists the new value to localStorage.\n  const setValue = (value: T) => {\n    try {\n      // Allow value to be a function so we have same API as useState\n      const valueToStore =\n        value instanceof Function ? value(storedValue) : value;\n      // Save state\n      setStoredValue(valueToStore);\n      // Save to local storage\n      window.localStorage.setItem(key, JSON.stringify(valueToStore));\n    } catch (error) {\n      // A more advanced implementation would handle the error case\n      console.log(error);\n    }\n  };\n\n  return [storedValue, setValue];\n}\n","import React, { useRef } from \"react\";\nimport { useAtomValue, useUpdateAtom } from \"jotai/utils\";\n\nimport Searchbox from \"./components/Searchbox\";\nimport AlbumTile from \"./components/AlbumTile\";\nimport Grid, { SortableItem } from \"./components/Grid\";\nimport DownloadButton from \"./components/DownloadButton\";\nimport { useAuth } from \"./hooks/useAuth\";\nimport {\n  gridIdsAtom,\n  addAlbumAtom,\n  sortAlbumsAtom,\n  removeAlbumAtom,\n  useAlbum,\n} from \"./hooks/useAlbumState\";\n\nexport default function App() {\n  const auth = useAuth();\n  const ids = useAtomValue(gridIdsAtom);\n  const addAlbum = useUpdateAtom(addAlbumAtom);\n  const sortAlbums = useUpdateAtom(sortAlbumsAtom);\n  const exportRef = useRef<HTMLDivElement>(null);\n\n  return (\n    <div className=\"font-nunito flex flex-col space-y-10 items-center px-4 py-10 text-gray-900\">\n      <h1 className=\"font-work text-5xl bg-gradient-to-r from-pink-400 via-purple-500 to-pink-400 bg-clip-text text-transparent animate-stripes motion-reduce:animate-none filter drop-shadow-lg\">\n        Music List\n      </h1>\n      <Searchbox auth={auth} onAlbumSelect={(album) => addAlbum(album)} />\n      <div>\n        <div ref={exportRef} className=\"bg-white\">\n          <Grid\n            items={ids}\n            onDragEnd={({ active, over }) => {\n              if (!over) return;\n              if (active.id === over.id) return;\n              sortAlbums({ from: active.id, to: over.id });\n            }}\n          >\n            <ul\n              style={{\n                lineHeight: 0,\n                width: \"90vw\",\n                height: \"90vw\",\n                maxWidth: 576,\n                maxHeight: 576,\n              }}\n            >\n              {ids.map((id) => (\n                <GridItem key={id} id={id} />\n              ))}\n            </ul>\n          </Grid>\n        </div>\n      </div>\n      <DownloadButton exportRef={exportRef} />\n    </div>\n  );\n}\n\ninterface GridItemProps {\n  id: string;\n}\nfunction GridItem({ id }: GridItemProps) {\n  const album = useAlbum(id);\n  const removeAlbum = useUpdateAtom(removeAlbumAtom);\n\n  return (\n    <SortableItem\n      key={id}\n      id={id}\n      className=\"inline-flex w-1/3 h-1/3 overflow-hidden cursor-default focus:outline-none focus:ring-4 focus:relative ring-purple-300\"\n      dragClassNames=\"opacity-30 focus:ring-0\"\n    >\n      {album ? (\n        <AlbumTile album={album} onCloseClick={() => removeAlbum(id)} />\n      ) : (\n        <div className=\"flex flex-1 bg-gray-200\">\n          {/* <div className=\"flex-1 bg-gray-400 rounded\"></div> */}\n        </div>\n      )}\n    </SortableItem>\n  );\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./src/App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"names":["res","fetch","access_token","token_type","expires_in","json","token","expiresAt","Date","now","auth","query","authorize","headers","Authorization","albums","items","inputAtom","atom","indexAtom","resultsAtom","searchesAtom","updateInputAtom","get","set","input","searches","setFetchedResultsAtom","__spreadProps","resetSearchAtom","onAlbumSelect","useAtomValue","index2","setIndex","useAtom","results","setResults","setInput","useUpdateAtom","setFetchedResults","resetSearch","debouncedSearch","useMemo","debounce","async","search","inputRef","useRef","searchResultsRef","handler","extraRefs","ref","listener","event","current","some","ref2","contains","target","addEventListener","removeEventListener","useOnClickOutside","previousIndex","length","nextIndex","className","onKeyDown","e","key","preventDefault","shiftKey","autoCorrect","placeholder","value","onChange","onFocus","select","clsx","SearchIcon","map","album","i","SearchItem","id","isHighlighted","onClick","_a","_b","props","__spreadValues","src","images","url","title","name","artists","EnterIcon","onCloseClick","CloseButton","stopPropagation","onDragStart","_c","CloseIcon","gridIdsAtom","Array","fill","_","toString","albumsAtom","Object","fromEntries","addAlbumAtom","gridIds","firstEmptyId","find","sortAlbumsAtom","from","to","fromIndex","findIndex","toIndex","newIds","slice","removeAlbumAtom","selectAtom","onDragEnd","children","activeId","setActiveId","useState","sensors","useSensors","useSensor","MouseSensor","activationConstraint","distance","TouchSensor","KeyboardSensor","coordinateGetter","sortableKeyboardCoordinates","useAlbum","DndContext","collisionDetection","closestCenter","active","onDragCancel","SortableContext","strategy","rectSwappingStrategy","createPortal","DragOverlay","adjustScale","zIndex","AlbumTile","document","body","_d","dragClassNames","_e","attributes","listeners","setNodeRef","transform","transition","isDragging","useSortable","animateLayoutChanges","style","CSS","Transform","touchAction","exportRef","dataurl","filename","a","createElement","href","setAttribute","click","toJpeg","canvasHeight","canvasWidth","background","setAuth","initialValue","storedValue","setStoredValue","item","window","localStorage","getItem","JSON","parse","error","valueToStore","Function","setItem","stringify","log","useLocalStorage","auth2","refreshToken","useAuth","ids","addAlbum","sortAlbums","Searchbox","Grid","over","lineHeight","width","height","maxWidth","maxHeight","GridItem","DownloadButton","removeAlbum","SortableItem","ReactDOM","render","React","StrictMode","App","getElementById"],"mappings":"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"}