{"version":3,"file":"index.934ccb1b.js","sources":["../../src/components/Title.tsx","../../src/state/appState.ts","../../src/hooks/useDarkMode.ts","../../src/components/DarkModeToggle.tsx","../../src/state/albumState.ts","../../src/api.ts","../../src/state/searchboxState.ts","../../src/util/debounce.ts","../../src/components/Searchbox.tsx","../../src/hooks/useClickOutside.ts","../../src/components/AlbumTile.tsx","../../src/components/Grid.tsx","../../src/components/AlbumGrid.tsx","../../src/components/DownloadButton.tsx","../../src/util/download.ts","../../src/hooks/useFetchAuth.ts","../../src/App.tsx","../../index.tsx"],"sourcesContent":["import React from \"react\";\n\ninterface TitleProps {\n  children: React.ReactNode;\n}\nexport default function Title({ children }: TitleProps) {\n  return (\n    <h1\n      className=\"font-work text-5xl bg-gradient-to-r from-pink-400 via-purple-500 to-pink-400 bg-clip-text text-transparent animate-flow motion-reduce:animate-none filter drop-shadow-lg\"\n      style={{ backgroundSize: 200 }}\n    >\n      {children}\n    </h1>\n  );\n}\n","import { atomWithStorage } from \"jotai/utils\";\nimport { Auth } from \"../api\";\n\nexport const authAtom = atomWithStorage<Auth>(\"auth\", {\n  token: \"\",\n  expiresAt: Date.now(),\n});\n\nexport const darkAtom = atomWithStorage<boolean | undefined>(\n  \"dark-mode\",\n  undefined\n);\n","import { SetStateAction, useAtom } from \"jotai\";\nimport { useEffect, useState } from \"react\";\nimport { darkAtom } from \"../state/appState\";\n\nexport function useDarkMode(): [\n  boolean,\n  (update?: SetStateAction<boolean | undefined>) => void\n] {\n  const [userEnabled, setUserEnabled] = useAtom(darkAtom);\n  const prefersDarkMode = usePrefersDarkMode();\n\n  const darkMode = userEnabled === undefined ? prefersDarkMode : userEnabled;\n\n  useEffect(() => {\n    const html = document.documentElement;\n    if (darkMode) {\n      html.classList.add(\"dark\");\n    } else {\n      html.classList.remove(\"dark\");\n    }\n  }, [darkMode]);\n\n  return [darkMode, setUserEnabled];\n}\n\nfunction usePrefersDarkMode() {\n  const [dark, setDark] = useState(\n    window.matchMedia(\"(prefers-color-scheme: dark)\").matches\n  );\n  useEffect(() => {\n    const handleChange = ({ matches }: MediaQueryListEvent) => setDark(matches);\n    window\n      .matchMedia(\"(prefers-color-scheme: dark)\")\n      .addEventListener(\"change\", handleChange);\n    return window\n      .matchMedia(\"(prefers-color-scheme: dark)\")\n      .removeEventListener(\"change\", handleChange);\n  }, []);\n  return dark;\n}\n","import clsx from \"clsx\";\nimport React from \"react\";\nimport { useDarkMode } from \"../hooks/useDarkMode\";\n\nexport default function DarkModeToggle() {\n  const [darkMode, setDarkMode] = useDarkMode();\n\n  return (\n    <button\n      onClick={() => setDarkMode(!darkMode)}\n      className={clsx(\n        \"group relative flex items-center justify-center w-12 h-6 rounded-full focus:outline-none\",\n        \"bg-gray-500 dark:bg-gray-700\"\n      )}\n    >\n      <div\n        className={clsx(\n          \"absolute left-0 h-6 w-6 rounded-full border-2 group-focus:ring-2\",\n          \"transform transition-transform\",\n          darkMode ? \"translate-x-6\" : \"translate-x-0\",\n          \"bg-gray-200 group-hover:bg-gray-300 border-gray-500 ring-blue-400\",\n          \"dark:border-gray-700 dark:ring-blue-500\"\n        )}\n      />\n      <span className=\"text-md mt-px\">‚òÄÔ∏èüåõ</span>\n    </button>\n  );\n}\n","import { AlbumObject } from \"spotify-api-types\";\nimport { atom } from \"jotai\";\nimport { useMemo } from \"react\";\nimport { selectAtom, useAtomValue } from \"jotai/utils\";\n\nexport const gridIdsAtom = atom(\n  Array(9)\n    .fill(null)\n    .map((_, i) => i.toString())\n);\n\nexport const albumsAtom = atom<{ [key: string]: AlbumObject | null }>(\n  Object.fromEntries(\n    Array(9)\n      .fill(null)\n      .map((e, i) => [i.toString(), null])\n  )\n);\n\nexport const albumAtom = (id: string | null) => {\n  return atom((get) => get(albumsAtom)[id || \"\"]);\n};\n\nexport const addAlbumAtom = atom(null, (get, set, album: AlbumObject) => {\n  const gridIds = get(gridIdsAtom);\n  const albums = get(albumsAtom);\n  const firstEmptyId = gridIds.find((id) => albums[id] === null);\n  if (firstEmptyId === undefined) {\n    return;\n  }\n  set(albumsAtom, { ...albums, [firstEmptyId]: album });\n});\n\ninterface SortAlbumsProps {\n  from: string;\n  to: string;\n}\n\nexport const sortAlbumsAtom = atom(\n  null,\n  (get, set, { from, to }: SortAlbumsProps) => {\n    const gridIds = get(gridIdsAtom);\n    const fromIndex = gridIds.findIndex((id) => id === from);\n    const toIndex = gridIds.findIndex((id) => id === to);\n    const newIds = gridIds.slice();\n    newIds[fromIndex] = to;\n    newIds[toIndex] = from;\n    set(gridIdsAtom, newIds);\n  }\n);\n\nexport const removeAlbumAtom = atom(null, (get, set, id: string) => {\n  set(albumsAtom, { ...get(albumsAtom), [id]: null });\n});\n\nexport function useAlbum(id: string | null) {\n  return useAtomValue(\n    useMemo(() => selectAtom(albumsAtom, (albums) => albums[id || \"\"]), [id])\n  );\n}\n","import { AlbumObject } from \"spotify-api-types\";\n\nexport interface Auth {\n  token: string;\n  expiresAt: number;\n}\n\nexport async function authorize(): Promise<Auth> {\n  const res = await fetch(\n    \"https://1pd7ps5dmd.execute-api.ap-southeast-2.amazonaws.com/default/spotifyAuth\"\n  );\n  const { access_token, token_type, expires_in } = await res.json();\n\n  const expirationTime = Date.now() + (expires_in - 100) * 1000;\n  return {\n    token: `${token_type} ${access_token}`,\n    expiresAt: expirationTime,\n  };\n}\n\nexport async function search(\n  auth: Auth,\n  query: string\n): Promise<AlbumObject[]> {\n  if (!query) return [];\n\n  if (!auth.token) {\n    auth = await authorize();\n  }\n\n  const res = await fetch(\n    `https://api.spotify.com/v1/search?type=album&limit=5&q=${query}`,\n    {\n      headers: { Authorization: auth.token },\n    }\n  );\n  const { albums } = await res.json();\n  return albums.items;\n}\n","import { atom } from \"jotai\";\n\nimport { debounce } from \"../util/debounce\";\nimport { addAlbumAtom } from \"./albumState\";\nimport { authAtom } from \"./appState\";\nimport { Auth, search } from \"../api\";\nimport { AlbumObject } from \"spotify-api-types\";\n\nexport const inputAtom = atom(\"\");\nexport const indexAtom = atom(0);\n\nexport const searchAtom = atom(async (get) => {\n  const input = get(inputAtom);\n  const auth = get(authAtom);\n  if (!input) return;\n  return debouncedFetch(auth, input);\n});\n\nconst debouncedFetch = debounce(async (auth: Auth, query: string) => {\n  return await search(auth, query);\n}, 300);\n\nexport const onClickOutsideAtom = atom(null, (_, set) => {\n  set(inputAtom, \"\");\n  set(indexAtom, 0);\n});\n\nexport const onInputChangeAtom = atom(\n  null,\n  (_, set, event: React.ChangeEvent<HTMLInputElement>) => {\n    set(inputAtom, event.target.value);\n    set(indexAtom, 0);\n  }\n);\n\nexport const onClearButtonClickAtom = atom(null, (get, set) => {\n  set(inputAtom, \"\");\n  set(indexAtom, 0);\n});\n\nexport const onKeyDownAtom = atom(\n  null,\n  async (get, set, event: React.KeyboardEvent<HTMLDivElement>) => {\n    const index = get(indexAtom);\n    const results = await get(searchAtom, true);\n\n    const incrementIndex = () => {\n      if (!results) return;\n      set(indexAtom, index >= results.length - 1 ? 0 : index + 1);\n    };\n\n    const decrementIndex = () => {\n      if (!results) return;\n      set(indexAtom, index <= 0 ? results.length - 1 : index - 1);\n    };\n\n    const resetInput = () => {\n      set(inputAtom, \"\");\n      set(indexAtom, 0);\n    };\n\n    switch (event.key) {\n      case \"ArrowUp\":\n        event.preventDefault();\n        decrementIndex();\n        break;\n      case \"ArrowDown\":\n        event.preventDefault();\n        incrementIndex();\n        break;\n      case \"Enter\":\n        event.preventDefault();\n        if (!results) return;\n        set(addAlbumAtom, results[index]);\n        resetInput();\n        break;\n      case \"Escape\":\n        event.preventDefault();\n        resetInput();\n        break;\n      default:\n        break;\n    }\n  }\n);\n\nexport const onResultClickAtom = atom(null, (_, set, album: AlbumObject) => {\n  set(addAlbumAtom, album);\n  set(inputAtom, \"\");\n  set(indexAtom, 0);\n});\n","export function debounce<T extends unknown[], U>(\n  callback: (...args: T) => PromiseLike<U> | U,\n  wait: number\n) {\n  let timer: number;\n\n  return (...args: T): Promise<U> => {\n    clearTimeout(timer);\n    return new Promise((resolve) => {\n      timer = setTimeout(() => resolve(callback(...args)), wait);\n    });\n  };\n}\n","import React, { forwardRef, Suspense, useRef } from \"react\";\nimport clsx from \"clsx\";\nimport { AlbumObject } from \"spotify-api-types\";\nimport { useAtomValue, useUpdateAtom } from \"jotai/utils\";\n\nimport useOnClickOutside from \"../hooks/useClickOutside\";\nimport {\n  indexAtom,\n  inputAtom,\n  searchAtom,\n  onClickOutsideAtom,\n  onInputChangeAtom,\n  onKeyDownAtom,\n  onResultClickAtom,\n  onClearButtonClickAtom,\n} from \"../state/searchboxState\";\n\nimport { ReactComponent as EnterIcon } from \"../images/enter.svg\";\nimport { ReactComponent as SearchIcon } from \"../images/search.svg\";\nimport { ReactComponent as CloseIcon } from \"../images/close.svg\";\nimport { ReactComponent as SpinnerIcon } from \"../images/spinner.svg\";\n\nexport default function SearchBox() {\n  const onKeyDown = useUpdateAtom(onKeyDownAtom);\n  const onClickOutside = useUpdateAtom(onClickOutsideAtom);\n\n  const inputRef = useRef<HTMLInputElement>(null);\n  const resultsRef = useOnClickOutside<HTMLUListElement>(\n    onClickOutside,\n    inputRef\n  );\n\n  return (\n    <div className=\"w-full max-w-sm\" onKeyDown={onKeyDown}>\n      <SearchInput inputRef={inputRef} />\n      <Suspense\n        fallback={\n          <ResultsListBox>\n            <li className=\"flex items-center justify-center h-12\">\n              <SpinnerIcon className=\"animate-spin h-5 w-5 text-gray-500\" />\n            </li>\n          </ResultsListBox>\n        }\n      >\n        <ResultsList resultsRef={resultsRef} />\n      </Suspense>\n    </div>\n  );\n}\n\ninterface SearchInputProps {\n  inputRef: React.RefObject<HTMLInputElement>;\n}\nfunction SearchInput({ inputRef }: SearchInputProps) {\n  const input = useAtomValue(inputAtom);\n  const onInputChange = useUpdateAtom(onInputChangeAtom);\n  const onClearButtonClick = useUpdateAtom(onClearButtonClickAtom);\n\n  return (\n    <div className=\"relative group\">\n      <input\n        ref={inputRef}\n        autoCorrect=\"off\"\n        spellCheck=\"false\"\n        placeholder=\"Search\"\n        value={input}\n        onChange={onInputChange}\n        className={clsx(\n          \"w-full border-2 rounded-lg px-4 py-2 focus:outline-none\",\n          \"bg-purple-100 text-gray-900/90 placeholder-purple-900/50 border-purple-100 caret-purple-600/90\",\n          \"dark:bg-gray-700 dark:text-gray-50 dark:placeholder-purple-200/70 dark:border-gray-700 dark:caret-purple-200/90\",\n          \"hover:border-purple-200 focus:border-purple-200 focus:bg-white\",\n          \"dark:hover:border-gray-500 dark:focus:border-gray-400/30 dark:focus:bg-gray-900\",\n          !!input && \"rounded-b-none bg-white border-purple-100 outline-none\"\n        )}\n      />\n\n      {input ? (\n        <div className=\"absolute inset-y-0 right-0 rounded-r-lg overflow-hidden py-[2px]\">\n          <button\n            onClick={onClearButtonClick}\n            className=\"group h-full w-10 flex items-center justify-center text-purple-600/60 hover:text-purple-600 dark:text-gray-400 dark:hover:text-gray-100\"\n          >\n            <CloseIcon className=\"w-4 h-4 fill-current\" />\n          </button>\n        </div>\n      ) : (\n        <div className=\"absolute inset-y-0 right-0 flex items-center pointer-events-none\">\n          <SearchIcon\n            className={clsx(\n              \"w-4 h-4 fill-current mr-4\",\n              \"text-gray-400 group-hover:text-purple-500/80 group-focus-within:text-purple-500/80\",\n              \"dark:text-gray-500 group-hover:text-purple-400 group-focus-within:text-purple-400\"\n            )}\n          />\n        </div>\n      )}\n    </div>\n  );\n}\n\ninterface ResultsListProps {\n  resultsRef: React.RefObject<HTMLUListElement>;\n}\n\nfunction ResultsList({ resultsRef }: ResultsListProps) {\n  const index = useAtomValue(indexAtom);\n  const results = useAtomValue(searchAtom);\n  const onResultClick = useUpdateAtom(onResultClickAtom);\n\n  if (!results?.length) return null;\n\n  return (\n    <ResultsListBox ref={resultsRef}>\n      {results.map((album, i) => (\n        <Result\n          key={album.id}\n          isHighlighted={i === index}\n          album={album}\n          onClick={() => onResultClick(album)}\n        />\n      ))}\n    </ResultsListBox>\n  );\n}\n\ninterface ResultsListBoxProps {\n  children: React.ReactNode;\n}\nexport const ResultsListBox = forwardRef<HTMLUListElement, ResultsListBoxProps>(\n  function myFunc(props, ref) {\n    return (\n      <ul\n        ref={ref}\n        className={clsx(\n          \"absolute z-10 w-[calc(100%-32px)] max-w-sm shadow-xl overflow-auto\",\n          \"rounded-b-lg border-2 border-t-0 divide-y-2\",\n          \"bg-white text-gray-900 border-purple-200 divide-purple-200\",\n          \"dark:bg-gray-900 dark:text-white dark:border-gray-400/30 dark:divide-gray-400/30\"\n        )}\n      >\n        {/* eslint-disable-next-line react/prop-types */}\n        {props.children}\n      </ul>\n    );\n  }\n);\n\ninterface ResultProps\n  extends React.DetailedHTMLProps<\n    React.ButtonHTMLAttributes<HTMLButtonElement>,\n    HTMLButtonElement\n  > {\n  album: AlbumObject;\n  isHighlighted: boolean;\n}\n\nfunction Result({ album, isHighlighted, ...props }: ResultProps) {\n  return (\n    <li>\n      <button\n        className={clsx(\n          \"group relative w-full flex items-center justify-between px-2 py-1.5\",\n          \"hover:bg-purple-100 dark:hover:bg-gray-700 overflow-hidden\",\n          isHighlighted && \"bg-purple-100 dark:bg-gray-700\"\n        )}\n        {...props}\n      >\n        <div className=\"relative w-full flex items-center space-x-2 overflow-hidden\">\n          <img src={album.images[2].url} className=\"w-10 h-10 rounded\" />\n          <div className=\"flex flex-col items-start leading-5\">\n            <div title={album.name} className=\"whitespace-nowrap\">\n              {album.name}\n            </div>\n            <div\n              title={album.artists[0].name}\n              className=\"whitespace-nowrap text-gray-900/60 dark:text-purple-200/80\"\n            >\n              {album.artists[0].name}\n            </div>\n          </div>\n          {!isHighlighted && (\n            <div className=\"absolute h-full w-4 right-0 bg-gradient-to-l from-white  dark:from-gray-900 group-hover:from-purple-100 dark:group-hover:from-gray-700/30\" />\n          )}\n        </div>\n        {isHighlighted && (\n          <div className=\"hidden md:flex absolute right-0 h-full items-center pointer-events-none\">\n            <div className=\"w-10 h-full bg-gradient-to-l from-purple-100 dark:from-gray-700\" />\n            <div className=\"h-full flex items-center px-4 bg-purple-100 dark:bg-gray-700\">\n              <EnterIcon className=\"w-4 h-4 fill-current text-purple-600/60 dark:text-purple-300/100 flex-shrink-0\" />\n            </div>\n          </div>\n        )}\n      </button>\n    </li>\n  );\n}\n","import { useEffect, useRef } from \"react\";\n\nexport default function useClickOutside<T extends HTMLElement>(\n  handler: (event: MouseEvent | TouchEvent) => void,\n  ...extraRefs: React.RefObject<HTMLElement>[]\n): React.RefObject<T> {\n  const ref = useRef<T>(null);\n\n  useEffect(() => {\n    const listener = (event: MouseEvent | TouchEvent) => {\n      // Do nothing if clicking ref or extraRef element or descendent elements of these\n      if (\n        !ref.current ||\n        [ref, ...extraRefs].some((ref) =>\n          ref.current?.contains(event.target as Node)\n        )\n      ) {\n        return;\n      }\n\n      handler(event);\n    };\n\n    document.addEventListener(\"mousedown\", listener);\n    document.addEventListener(\"mouseup\", listener);\n    document.addEventListener(\"touchstart\", listener);\n    document.addEventListener(\"touchend\", listener);\n\n    return () => {\n      document.removeEventListener(\"mousedown\", listener);\n      document.removeEventListener(\"mouseup\", listener);\n      document.removeEventListener(\"touchstart\", listener);\n      document.removeEventListener(\"touchend\", listener);\n    };\n  }, [ref, handler, extraRefs]);\n\n  return ref;\n}\n","import clsx from \"clsx\";\nimport React from \"react\";\nimport { AlbumObject } from \"spotify-api-types\";\nimport { ReactComponent as CloseIcon } from \"../images/close.svg\";\n\ninterface AlbumTileProps {\n  album: AlbumObject;\n  onCloseClick?: () => void;\n  className?: string;\n}\n\nexport default function AlbumTile({\n  album,\n  onCloseClick,\n  className,\n}: AlbumTileProps) {\n  return (\n    <div\n      className={clsx(\n        \"group overflow-hidden bg-purple-50 dark:bg-gray-900\",\n        className\n      )}\n    >\n      <div className=\"relative\">\n        {onCloseClick && (\n          <CloseButton\n            onClick={(e) => {\n              e.stopPropagation();\n              onCloseClick();\n            }}\n          />\n        )}\n        <img\n          src={album.images[0].url}\n          onDragStart={(e) => e.preventDefault()}\n        />\n      </div>\n\n      {/* <Details album={album} /> */}\n    </div>\n  );\n}\n\nfunction CloseButton({\n  ...props\n}: React.DetailedHTMLProps<\n  React.ButtonHTMLAttributes<HTMLButtonElement>,\n  HTMLButtonElement\n>) {\n  return (\n    <button\n      className=\"invisible group-hover:visible absolute top-0 right-0 p-2 bg-black/30 rounded-bl-lg text-gray-200 hover:text-white focus:outline-none\"\n      {...props}\n    >\n      <CloseIcon className=\"w-4 h-4 fill-current\" />\n    </button>\n  );\n}\n\ninterface DetailsProps {\n  album: AlbumObject;\n}\n\nfunction Details({ album }: DetailsProps) {\n  return (\n    <div className=\"flex flex-col whitespace-nowrap\">\n      <div title={album.name} className=\"relative overflow-hidden\">\n        <span className=\"text-sm\">{album.name}</span>\n        <div className=\"absolute right-0 top-0 h-full w-4 bg-gradient-to-l from-white via-white\" />\n      </div>\n      <div\n        title={album.artists[0].name}\n        className=\"text-sm text-gray-600 leading-4 truncate\"\n      >\n        {album.artists[0].name}\n      </div>\n    </div>\n  );\n}\n","import React, { useState } from \"react\";\nimport { createPortal } from \"react-dom\";\nimport clsx from \"clsx\";\nimport {\n  closestCenter,\n  DndContext,\n  DragEndEvent,\n  DragOverlay,\n  KeyboardSensor,\n  MouseSensor,\n  TouchSensor,\n  useSensor,\n  useSensors,\n} from \"@dnd-kit/core\";\nimport {\n  rectSwappingStrategy,\n  SortableContext,\n  sortableKeyboardCoordinates,\n  useSortable,\n} from \"@dnd-kit/sortable\";\nimport { CSS } from \"@dnd-kit/utilities\";\n\nimport AlbumTile from \"./AlbumTile\";\nimport { useAlbum } from \"../state/albumState\";\n\ninterface GridProps {\n  items: string[];\n  onDragEnd: (event: DragEndEvent) => void;\n  children: React.ReactNode;\n}\n\nexport default function Grid({ items, onDragEnd, children }: GridProps) {\n  const [activeId, setActiveId] = useState<string | null>(null);\n  const sensors = useSensors(\n    useSensor(MouseSensor, {\n      activationConstraint: {\n        distance: 15,\n      },\n    }),\n    useSensor(TouchSensor, {\n      activationConstraint: {\n        distance: 15,\n      },\n    }),\n    useSensor(KeyboardSensor, {\n      coordinateGetter: sortableKeyboardCoordinates,\n    })\n  );\n\n  const album = useAlbum(activeId);\n\n  return (\n    <DndContext\n      sensors={sensors}\n      collisionDetection={closestCenter}\n      onDragStart={(event) => setActiveId(event.active.id)}\n      onDragEnd={(event) => {\n        onDragEnd(event);\n        setActiveId(null);\n      }}\n      onDragCancel={() => setActiveId(null)}\n    >\n      <SortableContext items={items} strategy={rectSwappingStrategy}>\n        {children}\n      </SortableContext>\n      {createPortal(\n        <DragOverlay adjustScale={true} zIndex={10}>\n          {album && (\n            <AlbumTile\n              album={album}\n              className=\"shadow-xl ring-4 ring-purple-400 opacity-100\"\n            />\n          )}\n        </DragOverlay>,\n        document.body\n      )}\n    </DndContext>\n  );\n}\n\ninterface SortableItemProps\n  extends React.DetailedHTMLProps<\n    React.LiHTMLAttributes<HTMLLIElement>,\n    HTMLLIElement\n  > {\n  id: string;\n  dragClassNames: string;\n  children: React.ReactNode;\n}\n\nexport function SortableItem({\n  id,\n  dragClassNames,\n  children,\n  ...props\n}: SortableItemProps) {\n  const {\n    attributes,\n    listeners,\n    setNodeRef,\n    transform,\n    transition,\n    isDragging,\n  } = useSortable({ id, animateLayoutChanges: () => false });\n\n  const style = {\n    transform: CSS.Transform.toString(transform),\n    transition: transition || undefined,\n  };\n\n  return (\n    <li\n      {...props}\n      ref={setNodeRef}\n      style={{ touchAction: \"none\", ...style }}\n      {...attributes}\n      {...listeners}\n      className={clsx(props.className, isDragging && dragClassNames)}\n    >\n      {children}\n    </li>\n  );\n}\n","import React from \"react\";\n\nimport Grid, { SortableItem } from \"./Grid\";\nimport AlbumTile from \"./AlbumTile\";\nimport { useAtomValue, useUpdateAtom } from \"jotai/utils\";\nimport {\n  gridIdsAtom,\n  removeAlbumAtom,\n  sortAlbumsAtom,\n  useAlbum,\n} from \"../state/albumState\";\n\ninterface AlbumGridProps {\n  exportRef: React.RefObject<HTMLDivElement>;\n}\nexport default function AlbumGrid({ exportRef }: AlbumGridProps) {\n  const ids = useAtomValue(gridIdsAtom);\n  const sortAlbums = useUpdateAtom(sortAlbumsAtom);\n\n  return (\n    <div className=\"m-0\">\n      <div ref={exportRef} className=\"bg-white\">\n        <Grid\n          items={ids}\n          onDragEnd={({ active, over }) => {\n            if (!over) return;\n            if (active.id === over.id) return;\n            sortAlbums({\n              from: active.id,\n              to: over.id,\n            });\n          }}\n        >\n          <ul\n            className=\"grid grid-cols-3 grid-rows-3 bg-gray-50 dark:bg-gray-900\"\n            style={{\n              lineHeight: 0,\n              width: \"90vw\",\n              height: \"90vw\",\n              maxWidth: 576,\n              maxHeight: 576,\n            }}\n          >\n            {ids.map((id) => (\n              <GridItem key={id} id={id} />\n            ))}\n          </ul>\n        </Grid>\n      </div>\n    </div>\n  );\n}\n\ninterface GridItemProps {\n  id: string;\n}\n\nfunction GridItem({ id }: GridItemProps) {\n  const album = useAlbum(id);\n  const removeAlbum = useUpdateAtom(removeAlbumAtom);\n\n  return (\n    <SortableItem\n      key={id}\n      id={id}\n      className=\"inline-flex overflow-hidden cursor-default focus:outline-none focus:ring-4 focus:relative focus:z-10 ring-purple-300\"\n      dragClassNames=\"opacity-30 focus:ring-0\"\n    >\n      {album ? (\n        <AlbumTile album={album} onCloseClick={() => removeAlbum(id)} />\n      ) : (\n        <div className=\"group flex flex-1 p-2 bg-gray-50 dark:bg-gray-900\">\n          <div className=\"flex-1 rounded-lg border-2 border-dashed border-purple-600/50 group-hover:border-purple-600/90 dark:border-purple-400/60 dark:group-hover:border-purple-400/90\"></div>\n        </div>\n      )}\n    </SortableItem>\n  );\n}\n","import React from \"react\";\nimport clsx from \"clsx\";\nimport { toJpeg } from \"html-to-image\";\nimport { download } from \"../util/download\";\n\ninterface DownloadButtonProps {\n  exportRef: React.RefObject<HTMLElement>;\n}\n\nexport default function DownloadButton({ exportRef }: DownloadButtonProps) {\n  return (\n    <button\n      onClick={async () => {\n        if (!exportRef.current) return;\n        const jpg = await toJpeg(exportRef.current, {\n          canvasHeight: 640 * 3,\n          canvasWidth: 640 * 3,\n        });\n        download(jpg, \"chart.jpg\");\n      }}\n      className={clsx(\n        \"px-2 py-1 rounded font-work text-lg focus:outline-none focus:ring\",\n        \"hover:shadow-md active:shadow-inner\",\n        \"bg-stripes-light text-purple-900/80  ring-purple-400\",\n        \"dark:bg-stripes-dark dark:text-purple-100/80 dark:ring-purple-600\"\n      )}\n    >\n      Download\n    </button>\n  );\n}\n","export function download(dataurl: string, filename: string) {\n  const a = document.createElement(\"a\");\n  a.href = dataurl;\n  a.setAttribute(\"download\", filename);\n  a.click();\n}\n","import { useEffect } from \"react\";\nimport { useAtom } from \"jotai\";\n\nimport { authorize } from \"../api\";\nimport { authAtom } from \"../state/appState\";\n\nexport function useFetchAuth() {\n  const [auth, setAuth] = useAtom(authAtom);\n\n  useEffect(() => {\n    if (auth.token && auth.expiresAt > Date.now()) return;\n    async function refreshToken() {\n      const auth = await authorize();\n      setAuth(auth);\n      // Automatically refresh token when it expires\n      setTimeout(refreshToken, auth.expiresAt - Date.now());\n    }\n    refreshToken();\n  }, [auth.expiresAt, auth.token, setAuth]);\n\n  return auth;\n}\n","import React, { useRef } from \"react\";\n\nimport Title from \"./components/Title\";\nimport DarkModeToggle from \"./components/DarkModeToggle\";\nimport Searchbox from \"./components/Searchbox\";\nimport AlbumGrid from \"./components/AlbumGrid\";\nimport DownloadButton from \"./components/DownloadButton\";\n\nimport { useFetchAuth } from \"./hooks/useFetchAuth\";\nimport { useDarkMode } from \"./hooks/useDarkMode\";\n\nexport default function App() {\n  useFetchAuth();\n  useDarkMode();\n  const exportRef = useRef<HTMLDivElement>(null);\n\n  return (\n    <div className=\"relative font-nunito flex flex-col space-y-10 items-center px-4 py-10 text-gray-900 selection:bg-pink-100 dark:selection:bg-pink-200/80 selection:text-purple-900\">\n      <div className=\"absolute top-2 right-2\">\n        <DarkModeToggle />\n      </div>\n      <Title>Music List</Title>\n      <Searchbox />\n      <AlbumGrid exportRef={exportRef} />\n      <DownloadButton exportRef={exportRef} />\n    </div>\n  );\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./src/App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"names":["children","className","style","backgroundSize","authAtom","atomWithStorage","token","expiresAt","Date","now","darkAtom","userEnabled","setUserEnabled","useAtom","prefersDarkMode","dark","setDark","useState","window","matchMedia","matches","handleChange","addEventListener","removeEventListener","usePrefersDarkMode","darkMode","html","document","documentElement","classList","add","remove","setDarkMode","useDarkMode","onClick","clsx","gridIdsAtom","atom","Array","fill","map","_","i","toString","albumsAtom","Object","fromEntries","e","addAlbumAtom","get","set","album","gridIds","albums","firstEmptyId","find","id","__spreadProps","sortAlbumsAtom","from","to","fromIndex","findIndex","toIndex","newIds","slice","removeAlbumAtom","useAtomValue","useMemo","selectAtom","res","fetch","access_token","token_type","expires_in","json","inputAtom","indexAtom","searchAtom","async","input","auth","debouncedFetch","callback","wait","timer","args","Promise","resolve","setTimeout","debounce","query","authorize","headers","Authorization","items","search","onClickOutsideAtom","onInputChangeAtom","event","target","value","onClearButtonClickAtom","onKeyDownAtom","index2","results","resetInput","key","preventDefault","length","onResultClickAtom","onKeyDown","useUpdateAtom","onClickOutside","inputRef","useRef","resultsRef","handler","extraRefs","ref","listener","current","some","ref2","contains","useOnClickOutside","SearchInput","Suspense","fallback","ResultsListBox","SpinnerIcon","ResultsList","onInputChange","onClearButtonClick","autoCorrect","spellCheck","placeholder","onChange","CloseIcon","SearchIcon","onResultClick","Result","isHighlighted","forwardRef","props","_a","_b","__spreadValues","src","images","url","title","name","artists","EnterIcon","onCloseClick","CloseButton","stopPropagation","onDragStart","_c","onDragEnd","activeId","setActiveId","sensors","useSensors","useSensor","MouseSensor","activationConstraint","distance","TouchSensor","KeyboardSensor","coordinateGetter","sortableKeyboardCoordinates","useAlbum","DndContext","collisionDetection","closestCenter","active","onDragCancel","SortableContext","strategy","rectSwappingStrategy","createPortal","DragOverlay","adjustScale","zIndex","AlbumTile","body","_d","dragClassNames","_e","attributes","listeners","setNodeRef","transform","transition","isDragging","useSortable","animateLayoutChanges","CSS","Transform","touchAction","exportRef","ids","sortAlbums","Grid","over","lineHeight","width","height","maxWidth","maxHeight","GridItem","removeAlbum","SortableItem","dataurl","filename","a","createElement","href","setAttribute","click","toJpeg","canvasHeight","canvasWidth","setAuth","auth2","refreshToken","DarkModeToggle","Title","Searchbox","AlbumGrid","DownloadButton","ReactDOM","render","React","StrictMode","App","getElementById"],"mappings":"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"}